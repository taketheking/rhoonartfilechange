spring.application.name=plplSettlement
spring.mvc.static-path-pattern=/**
spring.web.resources.static-locations=classpath:/static/
server.port=8080
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

# 파일 업로드 크기 제한 설정
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB
spring.servlet.multipart.file-size-threshold=2MB
server.tomcat.max-swallow-size=-1

# 개발 환경 설정
spring.devtools.restart.enabled=true

# 메모리 사용량 설정
# 애플리케이션 최대 힙 메모리 설정 (JVM 옵션으로 적용 필요: -Xmx2048m)
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# 로깅 설정
logging.level.root=INFO
logging.level.com.rhoonart=DEBUG

# 엑셀 처리 관련 설정
excel.output.dir=${java.io.tmpdir}

# 타임아웃 설정
server.tomcat.connection-timeout=600000
spring.mvc.async.request-timeout=1800000
server.servlet.session.timeout=3600s
server.netty.connection-timeout=1800s

# 추가 타임아웃 설정
spring.transaction.default-timeout=1800
spring.datasource.hikari.connection-timeout=1800000
# 매우 큰 파일 업로드 시간을 위한 Tomcat 설정
server.tomcat.connection-timeout=1800000
server.tomcat.max-keep-alive-requests=1000
server.tomcat.max-connections=8192

# 임시 파일 저장 경로
java.io.tmpdir=./temp

# 파일 인코딩 설정
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

# Thymeleaf 설정
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
